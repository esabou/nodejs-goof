name: Snyk Oauth Scans

on:
  workflow_dispatch:

jobs:
  snyk:
    runs-on: ubuntu-latest

    env:
      SNYK_ADMIN_TOKEN: ${{ secrets.SNYK_ADMIN_TOKEN }}
      GROUP_ID: ${{ secrets.GROUP_ID }}
      SERVICE_ACCOUNT_ID: ${{ secrets.SERVICE_ACCOUNT_ID }}
      API_BASE: https://api.snyk.io

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Rotate Service Account and Get Access Token
        id: oauth
        run: |
          response=$(curl -v -L -X POST \
          "$API_BASE/rest/groups/$GROUP_ID/service_accounts/$SERVICE_ACCOUNT_ID/secrets?version=2024-10-15" \
          -H "Authorization: token $SNYK_ADMIN_TOKEN" \
          -H "Content-Type: application/vnd.api+json" \
          -H "Accept: application/vnd.api+json" \
          -d '{
            "data": {
              "attributes": {
                "mode": "replace"
              },
              "type": "service_account"
            }
          }')
        
          client_id=$(echo "$response" | jq -r '.data.attributes.client_id')
          client_secret=$(echo "$response" | jq -r '.data.attributes.client_secret')
        
          echo "CLIENT_ID=$client_id"
          echo "CLIENT_SECRET=$client_secret"
          
          echo "CLIENT_ID=$client_id" >> $GITHUB_ENV
          echo "CLIENT_SECRET=$client_secret" >> $GITHUB_ENV

          # Exchange client credentials for access token
          token_response=$(curl -s -X POST "https://api.snyk.io/oauth2/token" \
            -H "Content-Type: application/x-www-form-urlencoded" \
            -d "grant_type=client_credentials&client_id=$client_id&client_secret=$client_secret")

          access_token=$(echo "$token_response" | jq -r '.access_token')

          echo "SNYK_OAUTH_TOKEN=$access_token" >> $GITHUB_ENV

      # - name: Authenticate Snyk CLI (interactive, not needed in CI)
      #   run: snyk auth --auth-type=oauth $SNYK_OAUTH_TOKEN

      - name: Run Snyk SCA Scan
        run: snyk test --severity-threshold=high --json-file-output=results-sca.json
        env:
          SNYK_OAUTH_TOKEN: ${{ env.SNYK_OAUTH_TOKEN }}

      - name: Run Snyk SAST Scan
        run: snyk code test --severity-threshold=high --json-file-output=results-sast.json
        env:
          SNYK_OAUTH_TOKEN: ${{ env.SNYK_OAUTH_TOKEN }}
